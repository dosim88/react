// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BlogItem should render usual item 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="blog-item text-center"
>
    <div
        className="row"
    >
        <TextBox>
            <Link
                replace={false}
                to="/posts/5"
            >
                Hello, World!
            </Link>
        </TextBox>
    </div>
    <div
        className="row"
    >
        <div
            className="col-md-6"
        >
            <Image
                alt="Hello World!"
                src="http://localhost:3001/images/post-1.jpg"
            />
        </div>
        <div
            className="col-md-6"
        >
            <Meta
                author="нет данных"
                createdAt="нет данных"
                likesCount={0}
                updatedAt="нет данных"
            />
        </div>
    </div>
    <div
        className="row"
    >
        <Connect(Like)
            postId={5}
        />
        <Link
            replace={false}
            to="/posts/5/edit"
        >
            Edit
        </Link>
    </div>
</div>,
  "nodes": Array [
    <div
      className="blog-item text-center"
>
      <div
            className="row"
      >
            <TextBox>
                  <Link
                        replace={false}
                        to="/posts/5"
                  >
                        Hello, World!
                  </Link>
            </TextBox>
      </div>
      <div
            className="row"
      >
            <div
                  className="col-md-6"
            >
                  <Image
                        alt="Hello World!"
                        src="http://localhost:3001/images/post-1.jpg"
                  />
            </div>
            <div
                  className="col-md-6"
            >
                  <Meta
                        author="нет данных"
                        createdAt="нет данных"
                        likesCount={0}
                        updatedAt="нет данных"
                  />
            </div>
      </div>
      <div
            className="row"
      >
            <Connect(Like)
                  postId={5}
            />
            <Link
                  replace={false}
                  to="/posts/5/edit"
            >
                  Edit
            </Link>
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <BlogItem
        post={
                Object {
                        "id": 5,
                        "image": Object {
                          "alt": "Hello World!",
                          "src": "http://localhost:3001/images/post-1.jpg",
                        },
                        "title": "Hello, World!",
                      }
        }
/>,
      "_debugID": 32,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "post": Object {
            "id": 5,
            "image": Object {
              "alt": "Hello World!",
              "src": "http://localhost:3001/images/post-1.jpg",
            },
            "title": "Hello, World!",
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="blog-item text-center"
>
          <div
                    className="row"
          >
                    <TextBox>
                              <Link
                                        replace={false}
                                        to="/posts/5"
                              >
                                        Hello, World!
                              </Link>
                    </TextBox>
          </div>
          <div
                    className="row"
          >
                    <div
                              className="col-md-6"
                    >
                              <Image
                                        alt="Hello World!"
                                        src="http://localhost:3001/images/post-1.jpg"
                              />
                    </div>
                    <div
                              className="col-md-6"
                    >
                              <Meta
                                        author="нет данных"
                                        createdAt="нет данных"
                                        likesCount={0}
                                        updatedAt="нет данных"
                              />
                    </div>
          </div>
          <div
                    className="row"
          >
                    <Connect(Like)
                              postId={5}
                    />
                    <Link
                              replace={false}
                              to="/posts/5/edit"
                    >
                              Edit
                    </Link>
          </div>
</div>,
        "_debugID": 33,
        "_renderedOutput": <div
          className="blog-item text-center"
>
          <div
                    className="row"
          >
                    <TextBox>
                              <Link
                                        replace={false}
                                        to="/posts/5"
                              >
                                        Hello, World!
                              </Link>
                    </TextBox>
          </div>
          <div
                    className="row"
          >
                    <div
                              className="col-md-6"
                    >
                              <Image
                                        alt="Hello World!"
                                        src="http://localhost:3001/images/post-1.jpg"
                              />
                    </div>
                    <div
                              className="col-md-6"
                    >
                              <Meta
                                        author="нет данных"
                                        createdAt="нет данных"
                                        likesCount={0}
                                        updatedAt="нет данных"
                              />
                    </div>
          </div>
          <div
                    className="row"
          >
                    <Connect(Like)
                              postId={5}
                    />
                    <Link
                              replace={false}
                              to="/posts/5/edit"
                    >
                              Edit
                    </Link>
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <BlogItem
    post={
        Object {
            "id": 5,
            "image": Object {
              "alt": "Hello World!",
              "src": "http://localhost:3001/images/post-1.jpg",
            },
            "title": "Hello, World!",
          }
    }
/>,
}
`;
